macro transpose($aflat:$asz, $arows, $acols):
    $a = array($arows)
    $i = 0
    while $i < $arows:
        $a[$i] = array($acols)
        $j = 0
        while $j < $acols:
            $a[$i][$j] = $aflat[$j + $i*$acols]
            $j += 1
        $i += 1
    $at = array($acols)
    $i = 0
    while $i < $asz:
        $at[$i] = array($arows)
        $i += 1
    $i = 0
    while $i < $acols:
        $j = 0
        while $j < $arows:
            $at[$i][$j] = $a[$j][$i]
            $j += 1
        $i += 1
    $at

def test_transpose():
    a = [[1, 4], [2, 5], [3, 6]]
    arows = 3
    acols = 2
    asz = arows * acols
    aflat = array(asz)
    i = 0
    while i < arows:
        j = 0
        while j < acols:
            aflat[j + i*acols] = a[i][j]
            j += 1
        i += 1
    expected = [[1, 2, 3], [4, 5, 6]]
    actual = transpose(aflat:asz, arows, acols)
    i = 0
    while i < acols:
        j = 0
        while j < arows:
            if expected[i][j] != actual[i][j]:
                return(0)
            j += 1
        i += 1
    return(1)
