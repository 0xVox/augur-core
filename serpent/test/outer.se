macro outer_product($u, $usz, $v, $vsz):
    with p = array($usz):
        with i = 0:
            while i < $usz:
                p[i] = array($usz)
                with j = 0:
                    while j < $usz:
                        p[i][j] += $u[i] * $v[j]
                        j += 1
                i += 1
            p

def test_outer():
    u = [2, 5, 7]
    v = [6, 2, 3]
    size = 3
    expected = array(3)
    expected[0] = [12, 4, 6]
    expected[1] = [30, 10, 15]
    expected[2] = [42, 14, 21]
    actual = outer_product(u, size, v, size)
    match = 1
    i = 0
    while i < size:
        j = 0
        while j < size:
            if actual[i][j] != expected[i][j]:
                match = 0
            j += 1
        i += 1
    return(match)
