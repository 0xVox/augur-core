# This software (Augur) allows buying && selling event outcomes in ethereum
# Copyright (C) 2015 Forecast Foundation 
#    This program is free software; you can redistribute it &&/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is free software: you can redistribute it &&/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
# Any questions please contact joey@augur.net

data p2pBets[](eventID, amtToBet, outcomeOneBettor, outcomeZeroBettor)

def getEvent(ID):
	return(self.p2pBets[ID].eventID)

def getAmtBet(ID):
	return(self.p2pBets[ID].amtToBet)

def getOutcomeOneBettor(ID):
	return(self.p2pBets[ID].outcomeOneBettor)

def getOutcomeZeroBettor(ID):
	return(self.p2pBets[ID].outcomeZeroBettor)

# check that msg.sender is one of our function contracts
def initializeP2PWager(ID, eventID, amtToBet, outcomeOneBettor, outcomeZeroBettor):
	if(self.p2pBets[ID].eventID == 0):
		self.p2pBets[ID].eventID = eventID
		self.p2pBets[ID].amtToBet = amtToBet
		self.p2pBets[ID].outcomeOneBettor = outcomeOneBettor
		self.p2pBets[ID].outcomeZeroBettor = outcomeZeroBettor
		return(1)
	else:
		return(0)