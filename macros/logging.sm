# This file is part of augur-core: https://github.com/AugurProject/augur-core
#
# Log to stdout, just like the good old days.  To use these macros,
# you must include a "stdout" event at the top of your contract:
#
# event stdout(data)
#
# @author Jack Peterson (jack@augur.net)

# prints an array to stdout
# $a: array
# $n: array length
macro print_array($a, $n):
    with $i = 0:
        while $i < $n:
            log(type=stdout, $a[$i])
            $i += 1

# print to stdout
macro print($x):
    log(type=stdout, $x)

# Prints an array.  Logs either contain a single entry (for integer values)
# or two entries (for fixed point numbers, the first entry is the integer
# and the second is the decimal).
macro print_fixed_array($a):
    with $n = len($a):
        with $i = 0:
            while $i < $n:
                # print 8 decimal points (adjustable)
                with $decimal = ($a[$i] & (2^64 - 1)) * 10^8 / 2^64:
                    if $decimal > 0:
                        log(type=stdout, $a[$i] / 2^64, $decimal)
                    else:
                        log(type=stdout, $a[$i] / 2^64)
                    $i += 1

# Prints a single entry (for integer values) or two entries (for fixed point
# numbers, the first entry is the integer and the second is the decimal).
macro print_fixed($x):
    with $d = ($x & (2^64 - 1)) * 10^8 / 2^64:
        if $d > 0:
            log(type=stdout, $x / 2^64, $d)
        else:
            log(type=stdout, $x / 2^64)
