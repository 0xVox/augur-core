import branches as BRANCHES
import expiringEvents as EXPEVENTS
import reporting as REPORTING
import consensusData as CONSENSUS

inset('refund.se')

event slashedRep(branch: indexed, sender: indexed, reporter: indexed, event, repSlashed, slasherBalance, timestamp)

# Anti cheat/collusion mechanism: provide ballot and random salt to steal rep from a colluder
# Returns:
    # 1: on success
    # -1: invalid vote period
    # -2: past reveal date
    # -3: reporter being slashed doesn't exist
    # -4: invalid claim / report hash -     # make sure that the colluding reporter's commit is the same as the info provided in the params
def slashRep(branch, salt, report, reporter, eventID):
    refund()
    periodLength = BRANCHES.getPeriodLength(branch)
    residual = block.timestamp % periodLength
    votePeriod = BRANCHES.getVotePeriod(branch)
    alreadySlashed = CONSENSUS.getSlashed(branch, votePeriod, reporter)
    votePeriodShouldBe = block.timestamp / periodLength - 1
    realHash = EXPEVENTS.getReportHash(branch, votePeriod, reporter, eventID)
    hashInfo = array(4)
    hashInfo[0] = reporter
    hashInfo[1] = salt
    hashInfo[2] = report
    hashInfo[3] = eventID
    reportHash = sha3(hashInfo, chars=32*len(hashInfo))
    if(residual > periodLength/2):
        return(-2)
    if(votePeriodShouldBe!=votePeriod):
        return(-1)
    if(alreadySlashed):
        return(-5)
    if(reportHash!=realHash):
        return(-4)
    CONSENSUS.setSlashed(branch, votePeriod, reporter)
    reporterIndex = REPORTING.repIDToIndex(branch, reporter)
    if(REPORTING.getReporterID(branch, reporterIndex)!=reporter):
        return(-3)
    trutherIndex = REPORTING.repIDToIndex(branch, msg.sender)
    # if the truther's rep. account doesn't exist, make one
    if(REPORTING.getReporterID(branch, trutherIndex)!=msg.sender):
        trutherIndex = REPORTING.getNumberReporters(branch)
        REPORTING.addReporter(branch, msg.sender, 0, 0, 0)
    reporterBalance = REPORTING.getRepBalance(branch, reporter)
    # removes rep from colluder
    REPORTING.subtractRep(branch, reporterIndex, reporterBalance)
    # gives truther half 
    REPORTING.addRep(branch, trutherIndex, (reporterBalance*ONEHALF / ONE))
    # other half sent to branch
    REPORTING.addRep(branch, REPORTING.repIDToIndex(branch, branch), reporterBalance*ONEHALF/ONE)
    log(type=slashedRep, branch, msg.sender, reporter, eventID, reporterBalance, REPORTING.getRepBalance(branch, msg.sender), block.timestamp)
    return(1)