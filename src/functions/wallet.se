extern subcurrency: [allowance:[int256,int256]:int256, approve:[int256,int256]:int256, balance:[]:int256, balanceOf:[int256]:int256, transfer:[int256,int256]:int256, transferFrom:[int256,int256,int256]:int256]
#extern whitelistStuff: [functions:[blam, blam!]]

data currency

def initialize(currency):
    if(!self.currency):
        self.currency = currency
    return(1)

def transfer(receiver, value):
    # todo need to have market + branch + event $ contracts support all the relevant contract keys in the namereg in the whitelist to allow them to send money from them - so in whitelist add each branch/market contract and then make them support all namereg keys necessary, should perhaps hardcode closemarket, closemarketone and closemarkettwo to prevent manipulation
    #if(!whitelistStuff.checkIfSenderInList(msg.sender)):
    #    throw()
    return(self.currency.transferFrom(self, receiver, cost))