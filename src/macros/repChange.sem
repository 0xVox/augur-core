# Calculates the amount of rep to be redistributed
# clarify ones w/ a new type system

macro calculateRepChange($report, $maxPenalty):
    indeterminate = outcome == 1500000000000000000
    adjustForNonBinaryResolution()
    $wrong = $report > safeAdd(outcome, POINT_ZERO_ONE) or $report < (outcome - POINT_ZERO_ONE)
    k = 0
    if($wrong):
        newRep = safeFxpMul(oldRep, safeSub(safeMul(2, p), ONE))
    # right/reported correctly
    else:
        percentWrong = safeSub(ONE, p)
        newRep = safeFxpMul(oldRep, safeAdd(safeFxpDiv(safeMul(2, safeFxpMul(percentWrong, percentWrong)), p), ONE))
    # (1-k) * old rep + k * new rep is the weighted new rep value where k = maxPenalty [max of 1] / (number of events you reported on last period) for penalization rate for backstop 1 and round 1 / regular randomized reporting
    # So if max penalty is 20% for a given period, the max per event is 2%
    if(numReportedOn < 10):
        k = $maxPenalty / 10
    else:
        k = safeDiv($maxPenalty, numReportedOn)
    smoothedWeightedNewRep = safeAdd(safeFxpMul(oldRep, safeSub(ONE, k)), safeFxpMul(newRep, k))
    repChange = 0
    # lost rep
    if(smoothedWeightedNewRep < oldRep):
        repChange = -safeSub(oldRep, smoothedWeightedNewRep)
    # same or gained rep
    else:
        repChange = safeSub(smoothedWeightedNewRep, oldRep)

macro adjustForNonBinaryResolution():
    if(scalar(event) or categorical(event) or indeterminate):
        diff = $report - outcome
        p = safeSub(ONE, safeDiv(abs(diff), 2))
