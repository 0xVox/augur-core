data Markets[](winningOutcomes[])

def test():
    x = array(8)
    x = self.banana(outitems=8)
    self.setWinningOutcomes(0, x)

def banana():
    x = array(8)
    x[0] = 5
    x[1] = 7
    return(x:arr)
    
def setWinningOutcomes(market, outcomes: arr):
	#if(!self.whitelist.check(msg.sender)):
	#    return(-1)
	# largest # of winning outcomes is 8
	save(self.Markets[market].winningOutcomes[0], outcomes, items=len(outcomes))
	return(1)

def getWinningOutcomes(market):
	# do whitelist, if oracle system branch, always return outcome, if in whitelist it's good, if not, log
	#if(!self.whitelist.check(msg.sender)):
	#    return(-1)
	# largest # of winning outcomes is 8
	return(load(self.Markets[market].winningOutcomes[0], items=8): arr)
